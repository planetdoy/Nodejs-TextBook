미들웨어는 익스프레스의 핵심입니다.
요청과 응답의 중간(middle)에 위치하여 미들 웨어라고 부릅니다.
라우터와 에러 헨들러 또한 미들웨어의 일종임으로 미들웨어가 익스프레스의 전부라해도 과언이 아닙니다.
미들웨어는 요청과 응답을 조작하여 기능을 추가하기도 하고, 나쁜 요청을 걸러내기도 합니다.

미들웨어는 app.use와 함께 사용합니다.
app.use(미들웨어)꼴 입니다.

app.use(미들웨어) : 모든 요청에서 미들웨어 실행
app.use('/abc', 미들웨어) : abc로 시작하는 요청에서 미들웨어 실행
app.post('/abc', 미들웨어) : abc로 시작하는 POST 요청에서 미들웨어 실행

dotenv : process.env를 관리하기 위해 설치 (미들웨어 아님)

morgan : 
            요청과 응답에 대한 정보를 콘솔에 기록합니다.
            app.use(morgan('dev')); ex) dev, combined(배포환경), common, short, tiny
            [HTTP 메서드] [주소] [HTTP 상태 코드] [응답 속도] - [응답 바이트]

static : (설치 no! , express객체 안에서 꺼내쓰면 됨)
        정적인 파일들을 제공하는 라우터 역할을 합니다. 
        app.use('요청 경로', express.static('실제 경로'));
        app.use('/', express.static(path.join(__dirname, 'public')));

        함수의 인수로 정적파일들이 담겨있는 폴더를 지정합니다. 현재 public 폴더가 지정되었습니다.

        보안에 도움이 됩니다. (p.237 참조)

body-parser : (설치 no! , express객체 안에서 꺼내쓰면 됨, 설치해야 되는 경우도 있음
            - json, urlencoded 형식 외에도 Raw, Test 형식의 데이터를 추가로 해석할 수 있습니다.
            Raw는 요청의 본문이 버퍼 데이터일 때, Text는 텍스트 데이터일 때 해석하는 미들웨어입니다.
            버퍼나, 텍스트 요청을 처리할 필요가 있다면 설치하면 됩니다.
            )
            요청의 본문에 있는 데이터를 해석해서 req.body 객체로 만들어주는 미들웨어 입니다.
            보통 폼 데이터나 AJAX 요청의 데이터를 처리합니다. 단, 멀티파트(이미지, 동영상, 파일) 데이터는 처리하지 못합니다.
            그 경우에는 multer 모듈을 사용하면 됩니다.

            app.use(express.json());
            app.use(express.urlencoded({ extended: false}));

            urlencoded 메서드의 { extended : false} 라는 옵션이 있습니다.
            false면 노드의 querystring 모듈을 사용하여 쿼리스트링을 해석하고
            true면 qs 모듈을 사용하여 쿼리스트링을 해석합니다.
            qs 모듈은 내장 모듈이 아니라 npm 패키지이며, querystring 모듈의 기능을 좀 더 확장한 모듈입니다.

