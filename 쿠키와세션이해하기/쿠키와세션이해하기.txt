서버는 미리 클라이언트에 요청자를 추정할 만한 정보를 쿠키로 만들어 보내고,
그 다음부터는 클라이언트로부터 쿠키를 받아 요청자를 파악합니다.
쿠키가 여러분이 누구인지 추적하고 있는 것입니다.

쿠키는 요청의 헤더에(Cookie)에 담겨 전송됩니다.
브라우저는 응답의 헤더(Set-Cookie)에 따라 쿠키를 저장합니다.



Set-Cookie로 쿠키를 설정할 때 만료시간(Expire)과 HttpOnly, Path 같은 옵션을 부과할 수 있습니다.
옵션사이에 ; 을 써서 구분합니다.

쿠키에는 한글, 줄바꿈이 들어가서는 안됩니다.
한글은 encodeURIComponent로 감싸서 넣습니다.

쿠키명 = 쿠키값 : 기본적인 쿠키의 값
Expires = 날짜 : 만료 기한입니다. 기한이 지나면 쿠키가 삭제됩니다. 기본값은 클라이언트가 종료될 때까지입니다.
Max-age = 초 : Expires와 비슷하지만 날짜 대신 초를 입력할 수 있습니다. 해당 초가 지나면 쿠키가 제거됩니다.
Domain = 도메인명 : 쿠키가 전송될 도메인을 특정할 수 있습니다. 기본값은 현재 도메인입니다.
Path = URL : 쿠키가 전송될 URL을 특정할 수 있습니다. 기본값은 '/' 이고, 이 경우 모든 URL에서 쿠키를 전송할 수 있습니다.
Secure : HTTPS일 경우에만 쿠키가 전송됩니다.
HttpOnly : 설정 시 자바스크립트에서 쿠키에 접근할 수 없습니다. 쿠키조작 방지를 위해 설정하는 것이 좋습니다.


쿠키에 사용자의 이름을 담아서 보내는 대신 숫자값(uniqueInt)을 보냈습니다.
사용자의 이름과 만료 시간은 uniqueInt 속성명 아래에 있는 session이라는 객체에 대신 저장합니다.
이 방식이 세션입니다. 
서버에 사용자 정보를 저장하고 클라이언트와는 세션아이디로만 소통합니다.
세션아이디는 꼭 쿠키를 사용해서 주고받지 않아도 됩니다.
세션을 위해 사용하는 쿠키를 세션 쿠키라고 합니다.

실제 배포용 서버에서는 세션을 변수에 저장하지않고 레디스(Redis)나 멤캐시드(Memcached)같은 데이터베이스에 넣어둡니다.
이유는 서버가 멈추거나 재시작시 메모리에 저장된 변수가 초기화되고 서버의 메모리가 부족하면 세션을 저장하지 못하는 문제가 발생하기 때문입니다.


